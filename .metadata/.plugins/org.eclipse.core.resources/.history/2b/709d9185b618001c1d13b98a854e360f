package com.app.ovm.pojos.entity;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;

import com.app.ovm.pojos.enums.OrderStatus;

@Entity
public class Order {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer Id;

	@Enumerated(EnumType.STRING)
	private OrderStatus orderDeliveryStatus;

	private double totalPrice;

	private LocalDate orderDate;

	private LocalDate deliveryDate;

	// @OnDelete(action = OnDeleteAction.NO_ACTION)
	@OneToMany(targetEntity = OrderDetails.class, mappedBy = "selectedOrder")
	List<OrderDetails> orderDetails = new ArrayList<>();

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.DETACH)
	// @OnDelete(action = OnDeleteAction.NO_ACTION)
	@JoinColumn(name = "user_id", nullable = true)
	private User selectedUser;

	@OneToOne(targetEntity = Payment.class, mappedBy = "order")
	private Payment payment;

	public Order() {
		// TODO Auto-generated constructor stub
	}

	public Order(Integer id, OrderStatus orderDeliveryStatus, double totalPrice, LocalDate orderDate,
			LocalDate deliveryDate, List<OrderDetails> orderDetails, User selectedUser, Payment payment) {
		super();
		Id = id;
		this.orderDeliveryStatus = orderDeliveryStatus;
		this.totalPrice = totalPrice;
		this.orderDate = orderDate;
		this.deliveryDate = deliveryDate;
		this.orderDetails = orderDetails;
		this.selectedUser = selectedUser;
		this.payment = payment;
	}

	public Integer getId() {
		return Id;
	}

	public void setId(Integer id) {
		Id = id;
	}

	public OrderStatus getOrderDeliveryStatus() {
		return orderDeliveryStatus;
	}

	public void setOrderDeliveryStatus(OrderStatus orderDeliveryStatus) {
		this.orderDeliveryStatus = orderDeliveryStatus;
	}

	public double getTotalPrice() {
		return totalPrice;
	}

	public void setTotalPrice(double totalPrice) {
		this.totalPrice = totalPrice;
	}

	public LocalDate getOrderDate() {
		return orderDate;
	}

	public void setOrderDate(LocalDate orderDate) {
		this.orderDate = orderDate;
	}

	public LocalDate getDeliveryDate() {
		return deliveryDate;
	}

	public void setDeliveryDate(LocalDate deliveryDate) {
		this.deliveryDate = deliveryDate;
	}

	public List<OrderDetails> getOrderDetails() {
		return orderDetails;
	}

	public void setOrderDetails(List<OrderDetails> orderDetails) {
		this.orderDetails = orderDetails;
	}

	public User getSelectedUser() {
		return selectedUser;
	}

	public void setSelectedUser(User selectedUser) {
		this.selectedUser = selectedUser;
	}

	public Payment getPayment() {
		return payment;
	}

	public void setPayment(Payment payment) {
		this.payment = payment;
	}

	@Override
	public String toString() {
		return "Order [Id=" + Id + ", orderDeliveryStatus=" + orderDeliveryStatus + ", totalPrice=" + totalPrice
				+ ", orderDate=" + orderDate + ", deliveryDate=" + deliveryDate + ", orderDetails=" + orderDetails
				+ ", selectedUser=" + selectedUser + ", payment=" + payment + "]";
	}

}
